library(markdown)
rmarkdown::render_site()
library(fpp3)
view(canadian_gas)
global_economy %>% autoplot(GDP/Population)
view(global_economy)
global_economy %>% autoplot("GDP"/"Population")
autoplot(global_economy, GDP/population)
global_economy %>%
autoplot(GDP/Population) +
labs(title= "GDP per capita", y = "$US")
global_economy %>% filter(Country) %>%
autoplot(GDP/Population) +
labs(title= "GDP per capita", y = "$US")
view(global_economy$Country)
summarise(global_economy$Country)
autoplot(global_economy, "Country")
show(global_economy$Country)
global_economy %>% group_by(Country) %>% autoplot(GDP/Population)
global_economy %>% filter(Country %in% c("Switzerland", "United States", "United Kingdom", "China", "Vietnam", "Russia", "Sweden", "Kosovo")) %>% autoplot(GDP/Population)
global_economy %>% filter(Country) %>% autoplot(GDP/Population)
global_economy %>% autoplot(GDP/Population)
global_economy %>%
group_by(Country) %>%
filter(Close == max(GDP/Population)) %>%
ungroup() %>%
select(Country, GDP, Population)
global_economy %>%
group_by(Country) %>%
filter(Close == max(GDP/Population)) %>%
ungroup() %>%
select()
global_economy %>%
group_by(Country) %>%
filter(Close == max(GDP/Population)) %>%
ungroup()
global_economy %>%
group_by(Country) %>%
filter(Close == max(GDP/Population))
global_economy %>%
group_by(Country) %>%
filter(GDP == GDP/Population)
global_economy %>% filter(Country == "United States") %>% autoplot(GDP)
global_economy %>% filter(Country == "United States") %>% autoplot(GDP/Population)
view(aus_livestock)
aus_livestock %>% filter(Animal == "Bulls, bullocks and steers") %>% filter(State == "Victoria") %>% autoplot(Count)
aus_livestock %>% filter(Animal == "Bulls, bullocks and steers") %>% filter(State == "Victoria") %>%  model(stl = STL(Count)) %>% autoplot(Count)geom_line(aes(y=trend), colour = "#D55E00") +
labs(
y = "Count",
title = "Slaughters of Victorian Bulls Bullocks and Steers"
)
aus_livestock %>% filter(Animal == "Bulls, bullocks and steers") %>% filter(State == "Victoria") %>%  model(stl = STL(Count)) %>% autoplot(Count) + geom_line(aes(y=trend), colour = "#D55E00") +
labs(
y = "Count",
title = "Slaughters of Victorian Bulls Bullocks and Steers"
)
SoVB <- aus_livestock %>% filter(Animal == "Bulls, bullocks and steers") %>% filter(State == "Victoria")
view(SoVB)
SoVB_Trend <- SoVB %>% model(stl = STL(Cost))
SoVB_Trend <- SoVB %>% model(stl = STL("Cost"))
components(SoVB_Trend)
help("model")
components(SoVB)
components(SoVB_Trend)
view(vic_elec)
vic_elec %>% autoplot()
VEC <- vic_elec %>% model(stl = STL(Demand))
components(VEC)
VEC %>% components() %>% autoplot()
view(aus_production)
aus_production %>% autoplot(Gas)
lambda <- aus_production %>%
features(Gas, features = guerrero) %>%
pull(lambda_guerrero)
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
labs(y = "",
title = latex2exp::TeX(paste0(
"Transformed gas production with $\\lambda$ = ",
round(lambda,2))))
lambda <- aus_production %>%
+     features(Gas, features = guerrero) %>%
+     pull(lambda_guerrero)
> aus_production %>%
+     autoplot(box_cox(Gas, lambda))
aus_production %>%
+     autoplot(box_cox(Gas, lambda))
aus_production %>%
+     +     autoplot(box_cox("Gas", lambda))
view(canadian_gas)
canadian_gas %>% autoplot()
canadian_gas %>% gg_subseries()
canadian_gas %>% gg_season()
canadian_gas %>% model(
STL(Volume ~ trend(window = 7) +
season(window = "periodic"),
robust = TRUE)) %>%
components() %>%
autoplot()
canadian_gas %>% model(
STL(Volume ~ trend(window = 9) +
season(window = "periodic"),
robust = TRUE)) %>%
components() %>%
autoplot()
canadian_gas %>% model(
STL(Volume ~ trend(window = 11) +
season(window = "periodic"),
robust = TRUE)) %>%
components() %>%
autoplot()
canadian_gas %>% model(
STL(Volume ~ trend(window = 11) +
season(window = "periodic")) %>%
components() %>%
autoplot()
canadian_gas %>% model(
STL(Volume ~ trend(window = 11) +
season(window = "periodic"))
components() %>%
autoplot()
canadian_gas %>% model(
STL(Volume ~ trend(window = 11) +
season(window = "periodic"))
components() %>%
autoplot()
canadian_gas %>% model(
STL(Volume ~ trend(window = 11) +
season(window = "periodic")), robust = FALSE)) %>%
components() %>%
autoplot()
canadian_gas %>% model(
STL(Volume ~ trend(window = 11) +
season(window = "periodic"),
robust = FALSE)) %>%
components() %>%
autoplot()
canadian_gas %>% model(
STL(Volume ~ trend(window = 11) +
season(window = "periodic"),
robust = FALSE)) %>%
components() %>%
gg_season()
canadian_gas %>% model(
STL(Volume ~ trend(window = 3) +
season(window = "periodic"),
robust = FALSE)) %>%
components() %>%
gg_season()
canadian_gas %>% model(
STL(Volume ~ trend(window = 11) +
season(window = "periodic"),
robust = TRUE)) %>%
components() %>%
gg_season()
canadian_gas %>% model(
STL(Volume ~ trend(window = 43) +
season(window = "periodic"),
robust = FALSE)) %>%
components() %>%
autoplot()
x11_CG <- canadian_gas %>%
model(x11 = X_13ARIMA_SEATS(Volume ~ x11())) %>%
components()
autoplot(x11_CG) +
labs(title =
"Volume Canadian Gas using X-11.")
x11_CG <- canadian_gas %>%
+     model(x11 = Volume(Volume ~ x11())) %>%
+     components()
x11_CG <- canadian_gas %>%
+     model(x11 = X_13ARIMA_SEATS(Volume ~ x11())) %>%
+     components()
view(us_employment)
seats_CG <- canadian_gas %>%
model(seats = X_13ARIMA_SEATS(Volume ~ seats())) %>%
components()
autoplot(seats_CG) +
labs(title =
"Volume Canadian Gas using SEATS")
ls()
rm("lambda")
rm(SoVB)
rm(SoVB_Trend)
rm(VEC)
x = 10 #creating an object
y <- 13 #other form to creat objects
x + y #operations performing with R
z <- x + y #other form of operations performing with R
x*y
z/y
y^2
squrt(x)
sqrt(x)
